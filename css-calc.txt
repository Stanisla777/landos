watch: {
  initial_payment_from_cost(newVal) {
    // Если идёт ручной ввод — не трогаем
    if (this.isTyping) return;

    // Если инициализация из answers — пропускаем (уже установлено)
    if (this.initializedFromAnswers) {
      this.initializedFromAnswers = false; // сбрасываем флаг после первой инициализации
      return;
    }

    const currentVal = this.dataFieldForCalculation;
    const minRequired = newVal; // 20% от новой стоимости
    const maxAllowed = this.stgMax; // costProperty - 1

    // Обновляем ТОЛЬКО если текущее значение НЕ в допустимых пределах
    if (currentVal < minRequired || currentVal >= maxAllowed) {
      this.realtySlider.set(minRequired);
      this.updateValue(minRequired); // согласованно с состоянием
    }
    // Если значение в пределах — ничего не делаем
  },
  stgMax(newVal) {
    if (this.realtySlider && this.realtySlider.updateOptions) {
      this.realtySlider.updateOptions({
        range: { min: this.stgMin, max: newVal }
      });
      const currentValue = parseInt(this.realtySlider.get());
      if (currentValue > newVal) {
        this.realtySlider.set(newVal);
      }
    }
  }
},
