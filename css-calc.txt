numberFormattingThousandths(maxValue, e) {
      const el = e.currentTarget;
      const prevValue = el.value;
      const selectionStart = el.selectionStart;

      // Сохраняем позицию до форматирования
      let cursorPos = selectionStart;

      // Удаляем всё, кроме цифр (сохраняем ВСЕ цифры, включая ведущие нули)
      let digits = prevValue.replace(/\D/g, '');
      if (!digits) {
        this.rawInputValue = '';
        el.value = '';
        return;
      }

      // Проверка максимума - теперь работаем со строкой, а не числом
      if (digits.length > String(maxValue).length) {
        digits = String(maxValue);
      } else {
        // Сравниваем как строки, если длины равны
        if (digits.length === String(maxValue).length && digits > String(maxValue)) {
          digits = String(maxValue);
        }
      }

      // Форматируем, сохраняя ведущие нули
      // Разбиваем на группы по 3 цифры с конца
      let formatted = '';
      for (let i = digits.length - 1, j = 0; i >= 0; i--, j++) {
        formatted = digits[i] + (j % 3 === 0 && j !== 0 ? ' ' : '') + formatted;
      }

      el.value = formatted.trim();
      this.rawInputValue = digits;

      // Восстанавливаем позицию курсора
      this.$nextTick(() => {
        // Считаем, сколько цифр было до курсора
        const digitsBeforeCursor = prevValue.slice(0, cursorPos).replace(/\D/g, '').length;
        
        // Находим новую позицию курсора в отформатированной строке
        let newCursorPos = 0;
        let digitCount = 0;
        
        for (let i = 0; i < el.value.length && digitCount < digitsBeforeCursor; i++) {
          if (/\d/.test(el.value[i])) {
            digitCount++;
          }
          newCursorPos = i + 1;
        }
        
        el.setSelectionRange(newCursorPos, newCursorPos);
      });
    },
