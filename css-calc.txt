initRealtySlider() {
  this.realtySlider = noUiSlider.create(this.$refs.mortgagePrice, {
    start: [Math.floor(this.start)], // Округляем начальное значение вниз
    connect: 'lower',
    step: 1, // Только целые шаги
    range: {
      min: 0, // Минимальное целое значение всегда 0
      max: Math.floor(this.stgMax) // Максимальное целое
    },
  })

  this.realtySlider.on('start', () => {
    this.input_salary = false
    // Сохраняем дробную часть текущего значения
    const currentValue = parseFloat(this.mask_interest.unmaskedValue.replace(',', '.'));
    this.decimalPart = currentValue % 1; // Сохраняем дробную часть
  });

  this.realtySlider.on('slide', (values, handle) => {
    if (this.isUpdating) return
    this.isUpdating = true

    const integerValue = Math.round(values[handle]);
    // Добавляем сохраненную дробную часть, но не меньше 0.1
    const newValue = integerValue + Math.max((this.decimalPart || 0), 0.1);
    
    this.updateInputValue(newValue)

    this.isUpdating = false
  });

  this.realtySlider.on('set', (values, handle) => {
    if (this.isUpdating) return
    this.isUpdating = true

    const integerValue = Math.round(values[handle]);
    const newValue = integerValue + Math.max((this.decimalPart || 0), 0.1);
    
    this.updateInputValue(newValue)
    this.updateStoreValue(newValue)

    this.isUpdating = false
    this.decimalPart = null;
  });
},
