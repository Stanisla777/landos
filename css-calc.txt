// Функция для позиционирования тултипа
  const positionTooltip = (element, event) => {
    const rect = element.getBoundingClientRect();
    const parent = element.parentElement;
    const tooltip = element.querySelector('.content-note__text');
    const parentPos = parent.getBoundingClientRect();
    const relativePosLeftElement = rect.left - parentPos.left;
    const noteText = element.querySelector('.content-note__text');
    const windowWidth = document.body.offsetWidth;
    const windowHeight = window.innerHeight;
    const parentWidth = parent.offsetWidth;
    const leftOffset = rect.left + rect.width / 2;
    const topOffset = rect.top + rect.height / 2;

    // Сначала скрываем тултип, чтобы избежать "дёргания"
    noteText.style.visibility = 'hidden';
    noteText.style.opacity = '0';

    // Если элемент ближе к левому краю экрана - выводим подсказку справа от него
    if (element.closest('.js--courses-accord-content') || element.closest('.js--element-overflow')) {
      if (windowWidth >= 600) {
        if (parentWidth / 2 < relativePosLeftElement) {
          noteText.style.left = 'auto';
          noteText.style.right = '-.25rem';
        } else {
          noteText.style.left = '.25rem';
          noteText.style.right = 'auto';
        }
      }
      if (windowWidth < 600) {
        noteText.style.inset = 'unset';
        noteText.style.transform = `translateX(${-((rect.left - tooltip.offsetWidth / 2 + 7) - (windowWidth / 2 - tooltip.offsetWidth / 2))}px)`;
      }
    } else {
      if (windowWidth >= 600) {
        if (windowWidth / 2 < leftOffset) {
          noteText.style.left = 'auto';
          noteText.style.right = '-.25rem';
        } else {
          noteText.style.left = '.25rem';
          noteText.style.right = 'auto';
        }
      }
      if (windowWidth < 600) {
        noteText.style.inset = 'unset';
        noteText.style.transform = `translateX(${-((rect.left - tooltip.offsetWidth / 2 + 7) - (windowWidth / 2 - tooltip.offsetWidth / 2))}px)`;
      }
    }

    // Если элемент ближе к верхнему краю экрана - выводим подсказу снизу от него
    if (element.closest('.js--courses-accord-content') || element.closest('.js--element-overflow')) {
      const notesParentBounding = element.closest('.js--courses-accord-content').getBoundingClientRect();
      const locationDifference = rect.top - notesParentBounding.top;
      const heightTooltip = tooltip.offsetHeight;
      if (heightTooltip >= locationDifference) {
        noteText.style.top = 'calc(100% + .25rem)';
        noteText.style.bottom = 'auto';
      } else if (heightTooltip < locationDifference && windowHeight / 2 < topOffset) {
        noteText.style.top = 'auto';
        noteText.style.bottom = 'calc(100% + .25rem)';
      } else if (heightTooltip < locationDifference && windowHeight / 2 > topOffset) {
        noteText.style.top = 'calc(100% + .25rem)';
        noteText.style.bottom = 'auto';
      }
    } else {
      if (windowHeight / 2 > topOffset) {
        noteText.style.top = 'calc(100% + .25rem)';
        noteText.style.bottom = 'auto';
      } else {
        noteText.style.top = 'auto';
        noteText.style.bottom = 'calc(100% + .25rem)';
      }
    }

    // После расчета позиции показываем тултип плавно
    setTimeout(() => {
      noteText.style.visibility = 'visible';
      noteText.style.opacity = '1';
      noteText.style.transition = 'opacity 0.2s ease, transform 0.2s ease';
    }, 10);
  };

  // Основная проверка - используем touch события для touch устройств ИЛИ при эмуляции
  if (isTouchDevice() || isIOS()) {
    document.addEventListener('touchstart', (e) => {
      if(e.target.classList.contains('js--content-note') && e.target.classList.contains('active')){
        e.target.classList.remove('active');
        e.target.querySelector('.content-note__text').classList.remove('active');
        return;
      }
      
      if(!e.target.classList.contains('js--content-note')) {
        for (let item of notes) {
          item.classList.remove('active');
          item.querySelector('.content-note__text').classList.remove('active');
        }
        return;
      }
      
      if (e.target.classList.contains('js--content-note')) {
        for (let item of notes) {
          item.classList.remove('active');
          item.querySelector('.content-note__text').classList.remove('active');
        }
        
        e.target.classList.add('active');
        const noteText = e.target.querySelector('.content-note__text');
        noteText.classList.add('active');
        
        // Позиционируем тултип с предотвращением "дёргания"
        positionTooltip(e.target, e);
      }
    });
  }
