/* eslint-disable */

import bodyLockMobileFilter from './redesign-site/body-lock-mobile-filter';
import bodyUnlockMobileFilter from './redesign-site/body-unlock-mobile-filter';
import RemoveClassBody from './redesign-site/allow-body-scrolling';


function openTooltipMobile() {
  const array_mobile_tooltip = document.querySelectorAll('.js--open-mobile-tooltip');
  for (let item of array_mobile_tooltip) {
    item.onclick = () => {
      const parent = item.closest('.js--tooltip-parent');
      if (parent) {
        parent.classList.add('active');
        bodyLockMobileFilter(parent);
      }
    };
  }
}

function closeTooltipMobile() {
  const array_mobile_tooltip_close = document.querySelectorAll('.js--close-mobile-tooltip');
  for (let item of array_mobile_tooltip_close) {
    item.onclick = () => {
      const parent = item.closest('.js--tooltip-parent');
      if (parent) {
        parent.classList.remove('active');
        bodyUnlockMobileFilter(parent);
      }
    };
  }
}

// Новая функция: закрыть всё и гарантированно разблокировать body
function closeAllMobileTooltips() {
  const activeParents = document.querySelectorAll('.js--tooltip-parent.active');
  if (activeParents.length > 0) {
    // Сначала убираем active у всех
    activeParents.forEach(parent => {
      parent.classList.remove('active');
    });

    // Затем — принудительно разблокируем body
    // (даже если bodyUnlockMobileFilter этого не сделает)
    RemoveClassBody();
  }
}

function moveTooltipIconIntoParagraph() {
  document.querySelectorAll('.row-title-container-with-tooltip').forEach(container => {
    const paragraph = container.querySelector('.calc-tax-deduc-new__row-title.big');
    const tooltipIcon = container.querySelector('.content-note:not(.mobile)');
    const mobileIcon = container.querySelector('.content-note.mobile');

    if (paragraph && tooltipIcon) {
      paragraph.appendChild(tooltipIcon);
      tooltipIcon.classList.add('js--tooltip-ready');
    }
    if (paragraph && mobileIcon) {
      paragraph.appendChild(mobileIcon);
      mobileIcon.classList.add('js--tooltip-ready');
    }
  });
}



// Обработчик ресайза
function handleResize() {
  // Порог из ваших медиазапросов: 480px
  if (window.innerWidth > 480) {
    closeAllMobileTooltips();
  }
}

// Экспорт
export default function tooltipMobile() {
  openTooltipMobile();
  closeTooltipMobile();
  //закоментированный вызов метода, который иконку помещает внутрь тэга <p>
  //moveTooltipIconIntoParagraph();
  // Слушаем ресайз
  window.addEventListener('resize', handleResize);

  // На всякий случай: проверяем при инициализации
  if (window.innerWidth > 480) {
    closeAllMobileTooltips();
  }
}



.row-title-container-with-tooltip.js--tooltip-parent

.content-note__text {
    max-width: 256px;
    background-color: #252628;
    border-radius: 4px;
    bottom: calc(100% + .25rem);
    box-shadow: none;
    cursor: default;
    font-family: Gilroy-Medium, sans-serif;
    font-size: 12px;
    left: -.25rem;
    line-height: 16px;
    color:#fff;
    opacity: 0;
    position: absolute;
    transition: opacity .3s, visibility .3s;
    visibility: hidden;
    display: none;
    width: 0;
    padding: 0;
    overflow: unset;
    &.up{
      &::after{
        content: "";
        position: absolute;
        top: 100%;
        left: 50%;
        margin-left: -5px;
        border-width: 5px;
        border-style: solid;
        border-color: black transparent transparent transparent;
      }
    }
    &.down{
      &::after{
        content: " ";
        position: absolute;
        bottom: 100%;  /* В верхней части всплывающей подсказки */
        left: 50%;
        margin-left: -5px;
        border-width: 5px;
        border-style: solid;
        border-color: transparent transparent black transparent;
      }
      transform:translate(-47%,8px)!important;
    }
    p,li, a{
      font-family: inherit;
      font-size: inherit;
      line-height: inherit;
      color:inherit;
    }
    li{
      p{
        font-family: inherit;
        font-size: inherit;
        line-height: inherit;
        color:inherit;
      }
    }
    a{
      @include underline-link(3px);
    }

  }

