if (isNote) {
  notes.forEach(item => {
    item.classList.remove('active');
    const text = item.querySelector('.content-note__text');
    text.classList.remove('active');
    text.classList.remove('up');
    text.classList.remove('down');
  });

  const noteText = e.target.querySelector('.content-note__text');
  const rect = e.target.getBoundingClientRect();
  const windowHeight = window.innerHeight;
  const topOffset = rect.top + rect.height / 2;

  // === 🔥 Сначала определяем направление (up/down) и добавляем классы ===
  if (windowHeight / 2 > topOffset) {
    noteText.classList.add('down');
    noteText.classList.remove('up');
  } else {
    noteText.classList.add('up');
    noteText.classList.remove('down');
  }

  // === 🔥 Скрываем визуально, но делаем измеримым ===
  noteText.style.visibility = 'hidden';
  noteText.style.opacity = '0';
  noteText.style.transition = 'none';

  // === 🔥 Показываем элемент (но невидимо) ===
  e.target.classList.add('active');
  noteText.classList.add('active');

  // === 🔥 Позиционируем — теперь знает, что класс up/down уже есть ===
  positionTooltip(e.target);

  // === 🔥 Показываем с анимацией ===
  requestAnimationFrame(() => {
    requestAnimationFrame(() => {
      noteText.style.visibility = 'visible';
      noteText.style.opacity = '1';
      noteText.style.transition = 'opacity 0.2s ease, transform 0.2s ease';
    });
  });
}
