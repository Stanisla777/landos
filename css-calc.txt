async copyLink(event) {
  const element = event.currentTarget;

  // Проверка на наличие нужного класса
  if (!element.classList.contains('js--instead-copyable')) {
    return;
  }

  const originalText = element.textContent;

  try {
    await navigator.clipboard.writeText(originalText);
    element.textContent = 'Текст скопирован!';

    setTimeout(() => {
      element.textContent = originalText;
    }, 3000);
  } catch (err) {
    console.error('Не удалось скопировать текст:', err);
    if (element.closest('.js--wrapper-inserting-copied')) {
      element.closest('.js--wrapper-inserting-copied').classList.add('active');
    }
  }
}
