scrollToElementSmart(container, targetElement) {
  const containerRect = container.getBoundingClientRect();
  const targetRect = targetElement.getBoundingClientRect();
  const pageScrollTop = window.scrollY;

  // Абсолютная позиция верха контейнера на странице
  const containerAbsoluteTop = containerRect.top + pageScrollTop;
  const targetAbsoluteTop = targetRect.top + pageScrollTop;

  const targetTopInContainer = targetRect.top - containerRect.top + container.scrollTop;
  const maxContainerScroll = container.scrollHeight - container.clientHeight;

  // Желаемая позиция скролла контейнера (чтобы элемент был вверху контейнера)
  const desiredContainerScroll = Math.max(0, Math.min(targetTopInContainer, maxContainerScroll));

  // Может ли контейнер вообще скроллиться?
  const canScrollContainer = container.scrollHeight > container.clientHeight;

  if (canScrollContainer) {
    // Пытаемся проскроллить контейнер, чтобы элемент был вверху
    this.smoothScrollTo(container, 'scrollTop', desiredContainerScroll, 300, (val) => {
      container.scrollTop = val;
    });

    // После завершения анимации проверяем, виден ли элемент на экране
    setTimeout(() => {
      const finalTargetRect = targetElement.getBoundingClientRect();
      if (
        finalTargetRect.top < 0 ||
        finalTargetRect.bottom > window.innerHeight
      ) {
        // Элемент частично или полностью вне экрана — подкручиваем страницу
        const newPageScrollTop = window.scrollY + finalTargetRect.top - 10;
        this.smoothScrollTo(window, 'scrollY', newPageScrollTop, 300, (val) => {
          window.scrollTo(0, val);
        });
      }
    }, 310);
  } else {
    // Контейнер не скроллится — скроллим страницу к контейнеру (или к элементу?)
    // Но лучше скроллить к элементу, если он ниже контейнера?
    // Однако, если контейнер не скроллится, и элемент в нём — скроллим к контейнеру

    // Всё же, лучше скроллить к элементу, если он не в экране
    const elementVisible = (
      targetAbsoluteTop >= pageScrollTop &&
      targetAbsoluteTop < pageScrollTop + window.innerHeight
    );

    if (!elementVisible) {
      this.smoothScrollTo(window, 'scrollY', targetAbsoluteTop - 10, 300, (val) => {
        window.scrollTo(0, val);
      });
    }
  }
},
