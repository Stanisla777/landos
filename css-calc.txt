errorMessage() {
  const total = parseInt(this.total_calculate.replace(/\s/g, '')) || 0;
  const max = parseInt(this.dataField_deduction.replace(/\s/g, '')) || 0;

  let shouldShowError = false;

  if (total > 0 && (max === 0 || total > max)) {
    shouldShowError = true;
  }

  this.$nextTick(() => {
    this.error_message = shouldShowError;
  });
},

this.updateDataFieldDeduction(); // ← ЭТО ОБЯЗАТЕЛЬНО!

updateDataFieldDeduction() {
  const income = parseInt(this.dataField.replace(/\s/g, '')) || 0;
  if (income === 0) {
    this.dataField_deduction = 0;
  } else {
    const maxDeduction = (income * 0.13).toFixed(0);
    this.dataField_deduction = maxDeduction.toString().replace(/(\d)(?=(\d{3})+$)/g, '$1 ');
  }
},
