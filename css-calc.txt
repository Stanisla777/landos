.js--not-one-height-mobile
.marathon-new-last__swiper-schedule-des-container.js--blocks-in-slide-one-height

/**
 * Выравнивает высоту блоков с классом .js--blocks-in-slide-one-height
 * внутри видимых слайдов Swiper-слайдеров.
 *
 * Если у .js--slider-construtor есть класс .js--not-one-height-mobile,
 * то на экранах < 590px выравнивание НЕ применяется.
 */
function equalizeBlocksInSlideHeight() {
  const sliders = document.querySelectorAll('.js--slider-construtor');

  sliders.forEach(sliderEl => {
    const swiper = sliderEl.swiper;
    if (!swiper) return;

    const disableOnMobile = sliderEl.classList.contains('js--not-one-height-mobile');
    const isMobile = window.innerWidth < 590;

    if (disableOnMobile && isMobile) {
      const blocks = sliderEl.querySelectorAll('.js--blocks-in-slide-one-height');
      blocks.forEach(block => block.style.minHeight = '');
      return;
    }

    // Берём ВСЕ настоящие слайды (не дубликаты, не заглушки)
    const realSlides = Array.from(sliderEl.querySelectorAll('.swiper-slide'))
      .filter(slide =>
        !slide.classList.contains('swiper-slide-duplicate') &&
        !slide.classList.contains('swiper-slide-invisible-blank')
      );

    if (realSlides.length <= 1) {
      const blocks = sliderEl.querySelectorAll('.js--blocks-in-slide-one-height');
      blocks.forEach(block => block.style.minHeight = '');
      return;
    }

    const targetBlocks = realSlides
      .map(slide => slide.querySelector('.js--blocks-in-slide-one-height'))
      .filter(Boolean);

    if (targetBlocks.length <= 1) {
      targetBlocks.forEach(block => block.style.minHeight = '');
      return;
    }

    // Сброс
    targetBlocks.forEach(block => block.style.minHeight = '');

    let maxHeight = 0;
    targetBlocks.forEach(block => {
      maxHeight = Math.max(maxHeight, block.offsetHeight);
    });

    targetBlocks.forEach(block => {
      block.style.minHeight = `${maxHeight}px`;
    });
  });
}
