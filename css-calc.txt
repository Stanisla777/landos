mounted() {
    this.$nextTick(() => {
      // Сначала создаём маску для процентной ставки
      this.inputRate();

      console.log('this.answers');
      console.log(this.answers[0].loanTerm);
      // После создания маски — безопасно работать с answers
      if (this.answers.length > 0 && Object.keys(this.answers[0]).length !== 0) {
        // Подставляем сумму кредита
        if (this.answers[0].loanAmount) {
          this.$refs.inputLoanAmount.value = new Intl.NumberFormat("ru-RU").format(this.answers[0].loanAmount);
          this.fieldNotEmpty(this.$refs.inputLoanAmount);
          this.loanAmount(this.$refs.inputLoanAmount);
        }

        // Подставляем ставку
        if (this.answers[0].bet) {
          const betValue = this.answers[0].bet.toString().replace(/\./g, ',');
          this.$refs.inputPersent.value = betValue;
          if (this.mask_interest) {
            this.mask_interest.value = betValue;
          }
          this.maxPercent(this.$refs.inputPersent);
          this.fieldNotEmpty(this.$refs.inputPersent);
          this.i_calculation = parseFloat(this.answers[0].bet);
        }

        // Подставляем срок кредита и переключаем радиокнопки
        if (this.answers[0].loanTerm) {
          if (this.answers[0].term === 'month') {
            this.$refs.switchTermMonth.click();
          } else {
            this.$refs.switchTermYear.click();
          }

          const termInput = this.$refs.fieldTermWrapper.querySelector('.js--field-term');
          if (termInput) {
            if (this.answers[0].term === 'month') {
              termInput.value = this.answers[0].loanTerm;
              this.justNumber(480, termInput);
            } else {
              termInput.value = parseInt(this.answers[0].loanTerm, 10) / 12;
              this.justNumber(40, termInput);
            }
            this.fieldNotEmpty(termInput);
          }
        }

        // Подставляем тип платежа
        if (this.answers[0].paymentType && this.answers[0].paymentType === 'differentiated') {
          this.$refs.differentiatedCheck.click();
        }

        // Обрабатываем дату получения кредита
        if (this.answers[0].dateReceipt) {
          let dateReceipt;
          try {
            dateReceipt = JSON.parse(this.answers[0].dateReceipt);
            const time_data_loan = parseInt(dateReceipt[1], 10) * 12 + parseInt(dateReceipt[0], 10) + 1;
            eventBus.$emit('emitTimeDataLoan', time_data_loan);
            eventBus.$emit('emitDateLoanReceipt', dateReceipt);
          } catch (e) {
            console.warn('Ошибка парсинга dateReceipt:', e);
          }
        }
      }

      // Обязательный emit при загрузке
      eventBus.$emit('emitMonthlyPayment', this.n_calculation);
    });
  },
