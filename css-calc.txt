async smoothScrollToElement(element) {
  const container = this.$refs.mobileShedule;
  
  // Вычисляем все необходимые позиции
  const elementRect = element.getBoundingClientRect();
  const containerRect = container.getBoundingClientRect();
  
  // Вычисляем конечную позицию скролла внутри контейнера
  const relativeTop = elementRect.top - containerRect.top;
  const targetContainerScroll = container.scrollTop + relativeTop - 20;
  
  // Проверяем, виден ли элемент в контейнере
  const isElementVisibleInContainer = 
    relativeTop >= 0 && 
    (relativeTop + elementRect.height) <= containerRect.height;
  
  if (!isElementVisibleInContainer) {
    // Если элемент не виден в контейнере, скроллим контейнер
    await this.animateScroll(container, targetContainerScroll, 600);
  }
  
  // Теперь проверяем, виден ли контейнер в viewport
  const containerViewportPosition = container.getBoundingClientRect();
  const isContainerInViewport = 
    containerViewportPosition.top >= 0 &&
    containerViewportPosition.bottom <= (window.innerHeight || document.documentElement.clientHeight);
  
  if (!isContainerInViewport) {
    // Если контейнер не в viewport, скроллим страницу так, чтобы контейнер был виден
    const targetWindowScroll = window.scrollY + containerViewportPosition.top - 20;
    await this.animateScroll(window, targetWindowScroll, 600);
  }
},
