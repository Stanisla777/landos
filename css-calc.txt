receivedDateMobile([year, month]) {
  const dateString = `${year}-${month}`;
  this.$nextTick(() => {
    const container = this.$refs.mobileShedule;
    const element = container.querySelector(`[data-date="${dateString}"]`);
    
    if (!element) return;

    // Функция для плавного скролла
    const smoothScroll = (target, scrollable, offset = 0) => {
      const targetRect = target.getBoundingClientRect();
      const scrollableRect = scrollable.getBoundingClientRect();
      
      // Вычисляем позицию для скролла
      const scrollPosition = scrollable.scrollTop + targetRect.top - scrollableRect.top - offset;
      
      // Анимация скролла
      const start = scrollable.scrollTop;
      const change = scrollPosition - start;
      const duration = 500; // milliseconds
      let startTime = null;

      const animateScroll = (currentTime) => {
        if (!startTime) startTime = currentTime;
        const elapsed = currentTime - startTime;
        const progress = Math.min(elapsed / duration, 1);
        const ease = easeInOutQuad(progress);
        scrollable.scrollTop = start + change * ease;
        
        if (progress < 1) {
          requestAnimationFrame(animateScroll);
        }
      };

      requestAnimationFrame(animateScroll);
    };

    // Функция для easing (плавности)
    function easeInOutQuad(t) {
      return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;
    }

    // Сначала скроллим страницу, чтобы контейнер был в видимой области
    const containerRect = container.getBoundingClientRect();
    const windowHeight = window.innerHeight;
    
    if (containerRect.top < 0 || containerRect.bottom > windowHeight) {
      // Контейнер не полностью в видимой области - скроллим страницу
      smoothScroll(container, document.documentElement, 20);
      
      // После скролла страницы скроллим внутри контейнера
      setTimeout(() => {
        smoothScroll(element, container, 10);
      }, 500); // Задержка должна соответствовать длительности анимации
    } else {
      // Контейнер уже в видимой области - просто скроллим внутри
      smoothScroll(element, container, 10);
    }
  });
}
