<div class="advanced-editor"><h2>Заголовок в отдельном advanced-editor задачи 3117</h2><div class="common-content"><p>Можно воспользоваться услугами риэлтора Можно воспользоваться услугами риэлтора
<span class="content-note js--with-arrow js--content-note">?
    <span class="content-note__text">
        Какое-то описание Какое-то описание Какое-то описание Какое-то описание
        Какое-то описание Какое-то описание Какое-то описание Какое-то описание
    </span>
</span>
Можно воспользоваться услугами риэлтора Можно воспользоваться услугам
<span class="content-note js--with-arrow js--content-note">?
    <span class="content-note__text down left" style="">
        Какое-то описание Какое-то описание Какое-то описание Какое-то описание
        Какое-то описание Какое-то описание Какое-то описание Какое-то описание
    </span>
</span></p><div><span class="tooltip-mobile active"><div class="select-list__head"><p>Какой-то текст</p><div class="select-list__head-close select-list__css-icon js--close-mobile-tooltip"></div></div><div class="select-list__wr-search mor-rep-calculators__wr-search">Какой-то текст</div></span><div class="select__background select__background-tooltip"></div></div></div><h2>Заголовок h2 задачи 3117</h2><div class="common-content"><p>Можно воспользоваться Можно воспользоваться</p><p>Можно воспользоваться Можно воспользоваться</p></div></div>



<div class="advanced-editor"><h2>Заголовок в отдельном advanced-editor задачи 3117</h2><div class="common-content"><p>Можно воспользоваться услугами риэлтора Можно воспользоваться услугами риэлтора
<span class="content-note js--with-arrow js--content-note">?
    <span class="content-note__text">
        Какое-то описание Какое-то описание Какое-то описание Какое-то описание
        Какое-то описание Какое-то описание Какое-то описание Какое-то описание
    </span>
</span>
Можно воспользоваться услугами риэлтора Можно воспользоваться услугам
<span class="content-note js--with-arrow js--content-note">?
    <span class="content-note__text down left" style="">
        Какое-то описание Какое-то описание Какое-то описание Какое-то описание
        Какое-то описание Какое-то описание Какое-то описание Какое-то описание
    </span>
</span></p><div><span class="tooltip-mobile active"><div class="select-list__head"><p>Какой-то текст</p><div class="select-list__head-close select-list__css-icon js--close-mobile-tooltip"></div></div><div class="select-list__wr-search mor-rep-calculators__wr-search">Какой-то текст</div></span><div class="select__background select__background-tooltip"></div></div></div><h2>Заголовок h2 задачи 3117</h2><div class="common-content"><p>Можно воспользоваться Можно воспользоваться</p><p>Можно воспользоваться Можно воспользоваться</p></div></div>


.content-note {
  &:not(.content-note__text){
    color: rgba(0, 0, 0, 0);
  }
  background-color: transparent;
  border-radius: 0;
  min-width: unset;
  align-items: unset;
  justify-content: center;
  cursor: pointer;
  position: relative;
  width: 16px;
  height: 16px;
  margin: 0 6px;
  transform: translateY(2px);
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 1.33333C4.3181 1.33333 1.33333 4.3181 1.33333 8C1.33333 11.6819 4.3181 14.6667 8 14.6667C11.6819 14.6667 14.6667 11.6819 14.6667 8C14.6667 4.3181 11.6819 1.33333 8 1.33333ZM0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8Z' fill='%236D6D6D'/%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 4.66667C7.02204 4.66667 6.33333 5.37829 6.33333 6.13333C6.33333 6.50152 6.03486 6.8 5.66667 6.8C5.29848 6.8 5 6.50152 5 6.13333C5 4.53196 6.40063 3.33333 8 3.33333C9.59937 3.33333 11 4.53196 11 6.13333C11 7.50703 9.96933 8.58436 8.66667 8.86293V9.33333C8.66667 9.70152 8.36819 10 8 10C7.63181 10 7.33333 9.70152 7.33333 9.33333V8.26667C7.33333 7.89848 7.63181 7.6 8 7.6C8.97796 7.6 9.66667 6.88838 9.66667 6.13333C9.66667 5.37829 8.97796 4.66667 8 4.66667Z' fill='%236D6D6D'/%3e%3cpath d='M8.66667 12C8.66667 12.3682 8.36819 12.6667 8 12.6667C7.63181 12.6667 7.33333 12.3682 7.33333 12C7.33333 11.6318 7.63181 11.3333 8 11.3333C8.36819 11.3333 8.66667 11.6318 8.66667 12Z' fill='%236D6D6D'/%3e%3c/svg%3e ");
  &:not(.mobile){
    display: inline-flex;
  }
  @include respondTo(tablet) {
    font-size: .75rem;//12px
    height: 1rem;//16px
    min-width: 1rem;//24px
    transform: translateY(-2px);
    width: 1rem;//16px
  }
  &.active{
    z-index: 20;
    &:after{
      content: "";
      z-index: 21;
      display: block;
      position: absolute;
      top: 8px;
      left: -10px;
      width: 135px;
      height: 30px;

    }
    &:before{
      content: "";
      z-index: 21;
      display: block;
      position: absolute;
      bottom: 21px;
      left: -10px;
      width: 135px;
      height: 30px;
    }

  }
  &.active:after {
    top: 8px;
    left: -23px;
  }
  &.active:before {
    bottom: 7px;
    left: -23px;
  }
  &.desctop{
    @include respondTo(small) {
      display: none;
    }
  }
  &.mobile{
    display: none;
    @include respondTo(small) {
      display: inline-flex;
    }
  }
}
.content-note__text{
  color: #252628;
  transition: opacity 0.2s ease, transform 0.2s ease;
  will-change: transform, opacity;
  background-color: $color-card-white;
  border-radius: 8px;
  bottom: calc(100% + .25rem);
  box-shadow: 0 10px 30px rgba(202, 204, 223, 0.5);
  cursor: default;
  font-family: $ff-medium;
  font-size: .875rem;//14px
  left: -.25rem;//-4px
  line-height: 1.29;
  opacity: 0;
  position: absolute;
  visibility: hidden;
  display: none;
  width: 0;
  padding: 0;
  overflow: hidden;
  @include respondTo(tablet) {
    font-size: .75rem;//12px
    line-height: 1.33;

  }
  @media screen and (max-width: 500px){
    max-width: 256px;
  }

  a{
    font-family: $ff-medium!important;
    font-size: .875rem!important;//14px
    left: -.25rem!important;//-4px
    line-height: 1.29!important;
    @include underline-link(3px);
    @include respondTo(tablet) {
      font-size: .75rem!important;//12px
      line-height: 1.33!important;
    }
  }
  &.active{
    z-index: 20;
    opacity: 1;
    visibility: visible;
    display: block;
    width: 23.5rem;//376px
    padding: 1.5rem;//24px

    @include respondTo(tablet) {
      padding: 1.25rem;//20px
      width: 20rem;//320px
    }

    @include respondTo(mobile) {
      padding: 1rem;//16px
      width: 17.5rem;//280px
    }

  }
  &.mor-rep-calculators__early-content-note{
    @media screen and (max-width: 1640px){
      transform: translate(-30%, -8px) !important;
    }
    &.up:after{
      @media screen and (max-width: 1640px){
        left: 33%;
      }
    }
  }
}
//--тултипы для нового редактора
.advanced-editor{
  .content-note{
    transform: translateY(-4px);
    align-items: center;
    background-color: transparent;
    cursor: pointer;
    margin: 0;
    min-width: unset;
    font-size: 0;
    line-height: 0;
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 1.33333C4.3181 1.33333 1.33333 4.3181 1.33333 8C1.33333 11.6819 4.3181 14.6667 8 14.6667C11.6819 14.6667 14.6667 11.6819 14.6667 8C14.6667 4.3181 11.6819 1.33333 8 1.33333ZM0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8Z' fill='%236D6D6D'/%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 4.66667C7.02204 4.66667 6.33333 5.37829 6.33333 6.13333C6.33333 6.50152 6.03486 6.8 5.66667 6.8C5.29848 6.8 5 6.50152 5 6.13333C5 4.53196 6.40063 3.33333 8 3.33333C9.59937 3.33333 11 4.53196 11 6.13333C11 7.50703 9.96933 8.58436 8.66667 8.86293V9.33333C8.66667 9.70152 8.36819 10 8 10C7.63181 10 7.33333 9.70152 7.33333 9.33333V8.26667C7.33333 7.89848 7.63181 7.6 8 7.6C8.97796 7.6 9.66667 6.88838 9.66667 6.13333C9.66667 5.37829 8.97796 4.66667 8 4.66667Z' fill='%236D6D6D'/%3e%3cpath d='M8.66667 12C8.66667 12.3682 8.36819 12.6667 8 12.6667C7.63181 12.6667 7.33333 12.3682 7.33333 12C7.33333 11.6318 7.63181 11.3333 8 11.3333C8.36819 11.3333 8.66667 11.6318 8.66667 12Z' fill='%236D6D6D'/%3e%3c/svg%3e ");
    &:before{
      bottom: 14px;
    }
    &:after{
    }
    &.big{
      width: 24px;
      height: 24px;
      background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2ZM0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12Z' fill='%236D6D6D'/%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M12 7C10.5331 7 9.5 8.06743 9.5 9.2C9.5 9.75229 9.05229 10.2 8.5 10.2C7.94772 10.2 7.5 9.75229 7.5 9.2C7.5 6.79795 9.60095 5 12 5C14.399 5 16.5 6.79795 16.5 9.2C16.5 11.2605 14.954 12.8765 13 13.2944V14C13 14.5523 12.5523 15 12 15C11.4477 15 11 14.5523 11 14V12.4C11 11.8477 11.4477 11.4 12 11.4C13.4669 11.4 14.5 10.3326 14.5 9.2C14.5 8.06743 13.4669 7 12 7Z' fill='%236D6D6D'/%3e%3cpath d='M13 18C13 18.5523 12.5523 19 12 19C11.4477 19 11 18.5523 11 18C11 17.4477 11.4477 17 12 17C12.5523 17 13 17.4477 13 18Z' fill='%236D6D6D'/%3e%3c/svg%3e ");
      transform:translateY(0);
      @include respondTo(small) {
        width: 16px;
        height: 16px;
      }
    }
    &__center{
      .content-note__text{
        transform:translate(-47%,-8px)!important;
        left:0!important;
      }
    }
    &.white{
      .content-note__text{
        background-color: $color-card-white;
        box-shadow: 0 10px 30px rgba(202, 204, 223, 0.5);
        color: $color-text-new;
        &::after{
          border-color: transparent transparent #fff;
        }
      }
    }
  }
  .content-note__text {
    max-width: 256px;
    background-color: #252628;
    border-radius: 4px;
    bottom: calc(100% + .25rem);
    box-shadow: none;
    cursor: default;
    font-family: Gilroy-Medium, sans-serif;
    font-size: 12px;
    //left: 0!important;
    line-height: 16px;
    color:#fff;
    opacity: 0;
    position: absolute;
    transition: opacity .3s, visibility .3s;
    visibility: hidden;
    display: none;
    width: 0;
    padding: 0;
    overflow: unset;

    &.without-arrow {
      &::after {
        display: none;
      }
    }
    &::after {
      content: "";
      position: absolute;
      border-width: 5px;
      border-style: solid;
      //@media screen and (max-width:600px){
      //  display: none;
      //}
    }
    &.left {
      &::after {
        right: 7px;
      }
    }

    &.right {
      &::after {
        left: 5px;
      }
    }
    &.up {
      &::after {
        top: 100%;
        border-color: black transparent transparent transparent;
      }
    }
    &.down {
      &::after {
        bottom: 100%;
        border-color: transparent transparent black transparent;
      }
    }

    &.up{
      //&::after{
      //  content: "";
      //  position: absolute;
      //  top: 100%;
      //  left: 50%;
      //  margin-left: -5px;
      //  border-width: 5px;
      //  border-style: solid;
      //  border-color: black transparent transparent transparent;
      //  @media screen and (max-width:600px){
      //    display: none;
      //  }
      //}
      @media screen and (min-width:600px){
        //transform: translate(-47%, -8px) !important;
        //left: 0 !important;
      }
    }
    &.down{
      //&::after{
      //  content: " ";
      //  position: absolute;
      //  bottom: 100%;  /* В верхней части всплывающей подсказки */
      //  left: 50%;
      //  margin-left: -5px;
      //  border-width: 5px;
      //  border-style: solid;
      //  border-color: transparent transparent black transparent;
      //  @media screen and (max-width:600px){
      //    display: none;
      //  }
      //}
      @media screen and (min-width:600px){
        //transform: translate(-47%, 8px) !important;
      }
    }
  }
  .content-note__text.active {
    z-index: 20;
    opacity: 1;
    visibility: visible;
    display: block;
    width: 23.5rem;
    padding: 12px 24px 12px 12px;
  }
}


.select__background {
    bottom: 0;
    display: none;
    left: 0;
    position: fixed;
    right: 0;
    top: 0;
    z-index: 10;
}
.tooltip-mobile {
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  transition:
    transform 0.3s linear,
    opacity 0.3s linear,
    visibility 0.3s linear;
  backface-visibility: hidden;
  display: block;
  position: fixed;
  bottom: 0;
  transform: translateY(105%);
  width: 100%;
  left: 0;
  background-color: #fff;
  box-shadow: 0 10px 30px rgba(202, 204, 223, .5);
  border-top-right-radius: 16px;
  border-top-left-radius: 16px;
  padding: 16px 5px 16px 0;
  z-index: 11;
  &.active{
    transform: translateY(0);
    z-index: 100;
    visibility: visible;
    pointer-events: auto;
    opacity: 1;
  }
}
.select-list__head-close{
  &.select-list__css-icon{
    background-size: 30%;
    background-repeat: no-repeat;
    background-position: center;
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg width='10' height='10' viewbox='0 0 10 10' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M0.209209 0.209209C0.488155 -0.0697365 0.940416 -0.0697365 1.21936 0.209209L5 3.98985L8.78064 0.209209C9.05958 -0.0697365 9.51184 -0.0697365 9.79079 0.209209C10.0697 0.488155 10.0697 0.940416 9.79079 1.21936L6.01015 5L9.79079 8.78064C10.0697 9.05958 10.0697 9.51184 9.79079 9.79079C9.51184 10.0697 9.05958 10.0697 8.78064 9.79079L5 6.01015L1.21936 9.79079C0.940416 10.0697 0.488155 10.0697 0.209209 9.79079C-0.0697365 9.51184 -0.0697365 9.05958 0.209209 8.78064L3.98985 5L0.209209 1.21936C-0.0697365 0.940416 -0.0697365 0.488155 0.209209 0.209209Z' fill='%23252628'%3e%3c/path%3e%3c/svg%3e");
  }
}
.select__background-tooltip{
  &.active{
    display: block;
  }
}

//Вспомогательные функции

bodyUnlockMobileFilter(el) {
  const dropDownList = el.querySelector('.js--openlist-body');
  if (dropDownList) {
    const styles = window.getComputedStyle(dropDownList);
    if (styles.position === 'fixed') {
      RemoveClassBody();
    }
  }
}

RemoveClassBody() {
  if (!document.body.classList.contains('body-modal-modals')) {
    document.body.classList.remove('body-modal');
    document.body.classList.remove('body-additional-class');
  }
  const scrollY = document.body.style.top;
  document.body.style.position = '';
  document.body.style.top = '';
  window.scrollTo(0, parseInt(scrollY || '0') * -1);
}

//вызов тултипа

export default function contentNote() {
  const notes = document.querySelectorAll('.js--content-note');

  // === Функция сброса inline-стилей тултипа ===
  function resetTooltipStyles(tooltip) {
    if (!tooltip) return;
    tooltip.style.left = '';
    tooltip.style.right = '';
    tooltip.style.top = '';
    tooltip.style.bottom = '';
    tooltip.style.transform = '';
    tooltip.style.inset = '';
  }

  // === Вспомогательная функция: добавление класса направления и смещения ===
  function adjustTooltipArrow(icon) {
    const tooltip = icon.querySelector('.content-note__text');
    if (!tooltip) return;

    // Убираем старые классы направления
    tooltip.classList.remove('left', 'right');

    // Определяем горизонтальное направление
    const leftStyle = tooltip.style.left;
    const rightStyle = tooltip.style.right;

    if (leftStyle && leftStyle !== 'auto' && leftStyle !== '') {
      tooltip.classList.add('right');
    } else if (rightStyle && rightStyle !== 'auto' && rightStyle !== '') {
      tooltip.classList.add('left');
    }

    // Применяем смещения, только если есть .js--with-arrow
    if (icon.classList.contains('js--with-arrow')) {
      // === Горизонтальное смещение ===
      if (tooltip.classList.contains('right')) {
        const currentLeft = parseFloat(tooltip.style.left) || 0;
        tooltip.style.left = (currentLeft - 6) + 'px';
      }
      // .left не смещаем по горизонтали — позиция уже корректна

      // === Вертикальное смещение ===
      const topStyle = tooltip.style.top;
      const bottomStyle = tooltip.style.bottom;

      if (topStyle && topStyle !== 'auto' && topStyle !== '') {
        // Тултип СНИЗУ → сдвигаем вниз
        const currentTop = parseFloat(topStyle) || 0;
        tooltip.style.top = (currentTop + 25) + 'px';
      } else if (bottomStyle && bottomStyle !== 'auto' && bottomStyle !== '') {
        // Тултип СВЕРХУ → сдвигаем вверх
        const currentBottom = parseFloat(bottomStyle) || 0;
        tooltip.style.bottom = (currentBottom + 25) + 'px';
      }
    }
  }

  // === iOS / touch handling ===
  const isIOS = (/(iPad|iPhone|iPod)/.test(navigator.userAgent) && !window.MSStream) ||
    (navigator.userAgent.includes('Mac') && 'ontouchend' in document);

  if (isIOS) {
    document.addEventListener('touchstart', (e) => {
      if (e.target.classList.contains('js--content-note') && e.target.classList.contains('active')) {
        e.target.classList.remove('active');
        const textEl = e.target.querySelector('.content-note__text');
        if (textEl) {
          textEl.classList.remove('active', 'without-arrow');
          resetTooltipStyles(textEl);
        }
      }

      if (!e.target.classList.contains('js--content-note')) {
        for (const note of notes) {
          note.classList.remove('active');
          const textEl = note.querySelector('.content-note__text');
          if (textEl) {
            textEl.classList.remove('active', 'without-arrow');
            resetTooltipStyles(textEl);
          }
        }
      }

      if (e.target.classList.contains('js--content-note')) {
        // Закрываем все остальные
        for (const note of notes) {
          note.classList.remove('active');
          const textEl = note.querySelector('.content-note__text');
          if (textEl) {
            textEl.classList.remove('active', 'without-arrow');
            resetTooltipStyles(textEl);
          }
        }

        // Открываем текущий
        e.target.classList.add('active');
        const tooltip = e.target.querySelector('.content-note__text');
        if (!tooltip) return;

        tooltip.classList.add('active');

        const rect = e.target.getBoundingClientRect();
        const windowWidth = document.body.offsetWidth;
        const windowHeight = window.innerHeight;
        const topOffset = rect.top + rect.height / 2;

        // === Горизонтальное позиционирование с поддержкой js--focus-on-parent ===
        const focusParent = e.target.closest('.js--focus-on-parent');

        if (focusParent) {
          const parentRect = focusParent.getBoundingClientRect();
          const iconCenterInParent = rect.left - parentRect.left + rect.width / 2;
          const parentCenter = parentRect.width / 2;

          if (iconCenterInParent > parentCenter) {
            tooltip.style.left = 'auto';
            tooltip.style.right = '-4px';
          } else {
            tooltip.style.left = '4px';
            tooltip.style.right = 'auto';
          }

          if (windowWidth < 480) {
            void tooltip.offsetWidth; // reflow после активации и позиционирования
            const tRect = tooltip.getBoundingClientRect();
            const doesNotFit = tRect.left < 16 || tRect.right > (windowWidth - 16);

            if (doesNotFit) {
              tooltip.style.inset = 'unset';
              tooltip.style.transform = `translateX(${
                -((rect.left - tooltip.offsetWidth / 2 + 7) - (windowWidth / 2 - tooltip.offsetWidth / 2))
              }px)`;
              tooltip.classList.add('without-arrow');
            } else {
              tooltip.classList.remove('without-arrow');
            }
          }
        } else if (
          e.target.closest('.js--courses-accord-content') ||
          e.target.closest('.js--element-overflow') ||
          e.target.closest('.js--element-overflow-x')
        ) {
          const parent = e.target.parentElement;
          const parentPos = parent.getBoundingClientRect();
          const relativePosLeftElement = rect.left - parentPos.left;
          const parentWidth = parent.offsetWidth;

          if (parentWidth / 2 < relativePosLeftElement) {
            tooltip.style.left = 'auto';
            tooltip.style.right = '-4px';
          } else {
            tooltip.style.left = '4px';
            tooltip.style.right = 'auto';
          }

          if (windowWidth < 480) {
            void tooltip.offsetWidth;
            const tRect = tooltip.getBoundingClientRect();
            const doesNotFit = tRect.left < 16 || tRect.right > (windowWidth - 16);

            if (doesNotFit) {
              tooltip.style.inset = 'unset';
              tooltip.style.transform = `translateX(${
                -((rect.left - tooltip.offsetWidth / 2 + 7) - (windowWidth / 2 - tooltip.offsetWidth / 2))
              }px)`;
              tooltip.classList.add('without-arrow');
            } else {
              tooltip.classList.remove('without-arrow');
            }
          }
        } else {
          const leftOffset = rect.left + rect.width / 2;
          if (windowWidth / 2 < leftOffset) {
            tooltip.style.left = 'auto';
            tooltip.style.right = '-4px';
          } else {
            tooltip.style.left = '4px';
            tooltip.style.right = 'auto';
          }

          if (windowWidth < 480) {
            void tooltip.offsetWidth;
            const tRect = tooltip.getBoundingClientRect();
            const doesNotFit = tRect.left < 16 || tRect.right > (windowWidth - 16);

            if (doesNotFit) {
              tooltip.style.inset = 'unset';
              tooltip.style.transform = `translateX(${
                -((rect.left - tooltip.offsetWidth / 2 + 7) - (windowWidth / 2 - tooltip.offsetWidth / 2))
              }px)`;
              tooltip.classList.add('without-arrow');
            } else {
              tooltip.classList.remove('without-arrow');
            }
          }
        }

        // === Вертикальное позиционирование ===
        if (
          e.target.closest('.js--courses-accord-content') ||
          e.target.closest('.js--element-overflow')
        ) {
          const notesParentBounding = e.target.closest('.js--courses-accord-content').getBoundingClientRect();
          const locationDifference = rect.top - notesParentBounding.top;
          const heightTooltip = tooltip.offsetHeight;
          if (heightTooltip >= locationDifference) {
            tooltip.style.top = 'calc(100% + 4px)';
            tooltip.style.bottom = 'auto';
          } else if (windowHeight / 2 < topOffset) {
            tooltip.style.top = 'auto';
            tooltip.style.bottom = 'calc(100% + 4px)';
          } else {
            tooltip.style.top = 'calc(100% + 4px)';
            tooltip.style.bottom = 'auto';
          }
        } else {
          if (windowHeight / 2 > topOffset) {
            tooltip.classList.remove('up');
            tooltip.classList.add('down');
            tooltip.style.top = 'calc(100% + 4px)';
            tooltip.style.bottom = 'auto';
          } else {
            tooltip.classList.remove('down');
            tooltip.classList.add('up');
            tooltip.style.top = 'auto';
            tooltip.style.bottom = 'calc(100% + 4px)';
          }
        }

        adjustTooltipArrow(e.target);
      }
    });
  }

  // === Desktop: mouseover ===
  document.addEventListener('mouseover', (e) => {
    if (e.target.classList.contains('js--content-note')) {
      // Закрываем другие (на всякий случай, хотя обычно не нужно на desktop)
      for (const note of notes) {
        if (note !== e.target) {
          note.classList.remove('active');
          const textEl = note.querySelector('.content-note__text');
          if (textEl) {
            textEl.classList.remove('active', 'without-arrow');
            resetTooltipStyles(textEl);
          }
        }
      }

      e.target.classList.add('active');
      const tooltip = e.target.querySelector('.content-note__text');
      if (!tooltip) return;

      tooltip.classList.add('active');

      const rect = e.target.getBoundingClientRect();
      const windowWidth = document.body.offsetWidth;
      const windowHeight = window.innerHeight;
      const topOffset = rect.top + rect.height / 2;
      const leftOffset = rect.left + rect.width / 2;

      const focusParent = e.target.closest('.js--focus-on-parent');

      if (focusParent) {
        const parentRect = focusParent.getBoundingClientRect();
        const iconCenterInParent = rect.left - parentRect.left + rect.width / 2;
        const parentCenter = parentRect.width / 2;

        if (iconCenterInParent > parentCenter) {
          tooltip.style.left = 'auto';
          tooltip.style.right = '-4px';
        } else {
          tooltip.style.left = '4px';
          tooltip.style.right = 'auto';
        }

        if (windowWidth < 480) {
          void tooltip.offsetWidth;
          const tRect = tooltip.getBoundingClientRect();
          const doesNotFit = tRect.left < 16 || tRect.right > (windowWidth - 16);

          if (doesNotFit) {
            tooltip.style.left = '0';
            tooltip.style.transform = `translateX(${
              -(leftOffset - 28) + (windowWidth / 2 - 40) - (tooltip.offsetWidth / 2 - 15)
            }px)`;
            tooltip.classList.add('without-arrow');
          } else {
            tooltip.classList.remove('without-arrow');
          }
        }
      } else if (
        e.target.closest('.js--courses-accord-content') ||
        e.target.closest('.js--element-overflow') ||
        e.target.closest('.js--element-overflow-x')
      ) {
        const parent = e.target.parentElement;
        const parentPos = parent.getBoundingClientRect();
        const relativePosLeftElement = rect.left - parentPos.left;
        const parentWidth = parent.offsetWidth;

        if (parentWidth / 2 < relativePosLeftElement) {
          tooltip.style.left = 'auto';
          tooltip.style.right = '-4px';
        } else {
          tooltip.style.left = '4px';
          tooltip.style.right = 'auto';
        }

        if (windowWidth < 480) {
          void tooltip.offsetWidth;
          const tRect = tooltip.getBoundingClientRect();
          const doesNotFit = tRect.left < 16 || tRect.right > (windowWidth - 16);

          if (doesNotFit) {
            tooltip.style.left = '0';
            tooltip.style.transform = `translateX(${
              -(leftOffset - 28) + (windowWidth / 2 - 40) - (tooltip.offsetWidth / 2 - 15)
            }px)`;
            tooltip.classList.add('without-arrow');
          } else {
            tooltip.classList.remove('without-arrow');
          }
        }
      } else {
        if (windowWidth / 2 < leftOffset) {
          tooltip.style.left = 'auto';
          tooltip.style.right = '-4px';
        } else {
          tooltip.style.left = '4px';
          tooltip.style.right = 'auto';
        }

        if (windowWidth < 480) {
          void tooltip.offsetWidth;
          const tRect = tooltip.getBoundingClientRect();
          const doesNotFit = tRect.left < 16 || tRect.right > (windowWidth - 16);

          if (doesNotFit) {
            tooltip.style.left = '0';
            tooltip.style.transform = `translateX(${
              -(leftOffset - 28) + (windowWidth / 2 - 40) - (tooltip.offsetWidth / 2 - 15)
            }px)`;
            tooltip.classList.add('without-arrow');
          } else {
            tooltip.classList.remove('without-arrow');
          }
        }
      }

      // === Вертикальное позиционирование ===
      if (
        e.target.closest('.js--courses-accord-content') ||
        e.target.closest('.js--element-overflow')
      ) {
        const notesParentBounding = e.target.closest('.js--courses-accord-content').getBoundingClientRect();
        const locationDifference = rect.top - notesParentBounding.top;
        const heightTooltip = tooltip.offsetHeight;
        if (heightTooltip >= locationDifference) {
          tooltip.style.top = 'calc(100% + 4px)';
          tooltip.style.bottom = 'auto';
        } else if (windowHeight / 2 < topOffset) {
          tooltip.style.top = 'auto';
          tooltip.style.bottom = 'calc(100% + 4px)';
        } else {
          tooltip.style.top = 'calc(100% + 4px)';
          tooltip.style.bottom = 'auto';
        }
      } else {
        if (windowHeight / 2 > topOffset) {
          tooltip.classList.remove('up');
          tooltip.classList.add('down');
          tooltip.style.top = 'calc(100% + 4px)';
          tooltip.style.bottom = 'auto';
        } else {
          tooltip.classList.remove('down');
          tooltip.classList.add('up');
          tooltip.style.top = 'auto';
          tooltip.style.bottom = 'calc(100% + 4px)';
        }
      }

      adjustTooltipArrow(e.target);
    }

    if (e.target.closest && e.target.closest('.content-note__text')) {
      const root = e.target.closest('.js--content-note');
      if (root) {
        root.classList.add('active');
        const textEl = root.querySelector('.content-note__text');
        if (textEl) textEl.classList.add('active');
      }
    }
  });

  // === Desktop: mouseout ===
  document.addEventListener('mouseout', (e) => {
    const from = e.relatedTarget || e.toElement;
    const currentTooltip = e.target.closest && e.target.closest('.js--content-note');
    const fromInsideSameTooltip = from && from.closest && from.closest('.js--content-note');

    if (currentTooltip && !fromInsideSameTooltip) {
      currentTooltip.classList.remove('active');
      const textEl = currentTooltip.querySelector('.content-note__text');
      if (textEl) {
        textEl.classList.remove('active', 'without-arrow');
        resetTooltipStyles(textEl);
      }
    }
  });
}

