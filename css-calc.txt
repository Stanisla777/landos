if (document.readyState !== 'loading') {
  processBtnBookmark();
  initCheckboxValidation('.js--btn-registration-state'); // ← добавлено
} else {
  document.addEventListener('DOMContentLoaded', function () {
    processBtnBookmark();
    initCheckboxValidation('.js--btn-registration-state');
  });
}

/**
 * Инициализирует валидацию чекбоксов перед вызовом onclick на кнопке.
 * Показывает ошибку, если обязательные чекбоксы не отмечены.
 *
 * @param {string} buttonSelector - CSS-селектор кнопки
 */
function initCheckboxValidation(buttonSelector) {
  const btn = document.querySelector(buttonSelector);
  if (!btn) {
    console.warn(`Кнопка с селектором "${buttonSelector}" не найдена.`);
    return;
  }

  const checkboxWrappers = document.querySelectorAll('.js--checkbox_wrapper');
  const errorClass = 'js--input__error_required';

  // --- Надёжное получение оригинального обработчика ---
  let originalHandler = null;

  if (typeof btn.onclick === 'function') {
    // Стандартный случай: браузер создал обработчик
    originalHandler = btn.onclick;
  } else {
    // Резерв: читаем строку и создаём функцию
    const onclickAttr = btn.getAttribute('onclick');
    if (onclickAttr) {
      try {
        // Передаём 'event', если используется внутри onclick
        originalHandler = new Function('event', onclickAttr);
      } catch (e) {
        console.error('Не удалось создать функцию из onclick:', e);
      }
    }
  }

  // Убираем, чтобы не срабатывал автоматически
  btn.removeAttribute('onclick');
  btn.onclick = null;

  // --- Вспомогательные функции ---
  function getErrorMessage(checkbox) {
    return checkbox.getAttribute('data-required-hint') || 'Пожалуйста, подтвердите это условие';
  }

  function showError(formBlock, message) {
    if (!formBlock.querySelector('.' + errorClass)) {
      const error = document.createElement('p');
      error.className = 'input__error ' + errorClass;
      error.textContent = message;
      formBlock.appendChild(error);
    }
  }

  function removeError(formBlock) {
    const error = formBlock.querySelector('.' + errorClass);
    if (error) {
      error.remove();
    }
  }

  // --- Обработчик клика ---
  btn.addEventListener('click', function (e) {
    e.preventDefault();

    let hasError = false;

    checkboxWrappers.forEach(wrapper => {
      const checkbox = wrapper.querySelector('input[type="checkbox"]');
      const formBlock = wrapper.querySelector('.feed_back__user-form-block');

      if (!checkbox || !formBlock) return;

      // Удаляем старую ошибку
      removeError(formBlock);

      if (checkbox.hasAttribute('required') && !checkbox.checked) {
        const message = getErrorMessage(checkbox);
        showError(formBlock, message);
        hasError = true;
      }
    });

    // Если всё ок — вызываем оригинальный обработчик
    if (!hasError && typeof originalHandler === 'function') {
      originalHandler.call(btn, e); // передаём event, если нужно
    }
  });

  // --- Обработка изменений чекбоксов ---
  checkboxWrappers.forEach(wrapper => {
    const checkbox = wrapper.querySelector('input[type="checkbox"]');
    const formBlock = wrapper.querySelector('.feed_back__user-form-block');

    if (!checkbox || !formBlock || !checkbox.hasAttribute('required')) return;

    checkbox.addEventListener('change', function () {
      if (this.checked) {
        removeError(formBlock);
      } else {
        const message = getErrorMessage(this);
        showError(formBlock, message);
      }
    });
  });
}
