// Блок с данными: закруглённая рамка + текст
createDataBlock(text) {
  const padding = [20, 10, 20, 10]; // [left, top, right, bottom] → как padding: 10px 20px
  const blockHeight = 36; // высота блока (подберите позже)
  const borderWidth = 1;
  const borderColor = '#c8c8cb';
  const borderRadius = 20;

  return {
    stack: [
      // Рамка
      {
        canvas: [
          {
            type: 'rect',
            x: 0,
            y: 0,
            w: 230, // ширина одного блока (515 - 24*2 - 24) / 2 ≈ 230
            h: blockHeight,
            r: borderRadius,
            lineWidth: borderWidth,
            lineColor: borderColor
          }
        ],
        margin: [0, 0, 0, -blockHeight]
      },
      // Текст внутри
      {
        text: text,
        style: 'mortgageValue',
        margin: padding
      }
    ],
    width: 230 // фиксированная ширина для выравнивания
  };
}




createMortgageBlock() {
  return {
    stack: [
      {
        columns: [
          {
            width: '*',
            stack: [
              { text: 'Сумма кредита, ₽', style: 'label' },
              this.createDataBlock(this.$options.filters.format_decimal(this.loanAmount))
            ]
          },
          {
            width: '*',
            stack: [
              { text: 'Дата получения', style: 'label' },
              this.createDataBlock(`${this.$options.filters.capitalize(this.obj_month[this.startMonth - 1])} ${this.startYear}`)
            ]
          }
        ],
        columnGap: 24,
        margin: [0, 0, 0, 24]
      },
      {
        columns: [
          {
            width: '*',
            stack: [
              { text: 'Ставка, %', style: 'label' },
              this.createDataBlock(this.$options.filters.replace_point(this.annualInterestRate))
            ]
          },
          {
            width: '*',
            stack: [
              { text: 'Срок кредита', style: 'label' },
              this.createDataBlock(this.formattedTerm)
            ]
          }
        ],
        columnGap: 24,
        margin: [0, 0, 0, 24]
      },
      {
        columns: [
          {
            width: '*',
            stack: [
              {
                text: [
                  { text: 'Тип платежа: ', style: 'label' },
                  {
                    text: this.state.payment_type === 'annuity' ? 'Аннуитетный' : 'Дифференцированный',
                    style: 'valueInline'
                  }
                ]
              }
            ]
          }
        ],
        columnGap: 24
      }
    ]
  };
}
