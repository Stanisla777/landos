methods: {
  receivedDateMobile([year, month]) {
    const dateString = `${year}-${month}`;
    this.$nextTick(() => {
      const element = this.$refs.mobileShedule.querySelector(`[data-date="${dateString}"]`);
      if (element) {
        this.smoothScrollToElement(element);
      }
    });
  },

  smoothScrollToElement(element) {
    const container = this.$refs.mobileShedule;
    const containerRect = container.getBoundingClientRect();
    const elementRect = element.getBoundingClientRect();

    // Вычисляем позицию элемента относительно контейнера
    const scrollTop = container.scrollTop;
    const elementPositionInContainer = elementRect.top - containerRect.top + scrollTop;

    // Вычисляем конечную позицию скролла с учетом block: 'start'
    const targetScrollPosition = elementPositionInContainer;

    // Текущая позиция скролла
    const startPosition = container.scrollTop;
    const distance = targetScrollPosition - startPosition;
    const duration = 500; // Длительность анимации в мс
    let startTime = null;

    const animateScroll = (timestamp) => {
      if (!startTime) startTime = timestamp;
      const progress = timestamp - startTime;
      const percentage = Math.min(progress / duration, 1);
      
      // Используем easing функцию для более плавного эффекта
      const easing = (t) => t<.5 ? 2*t*t : -1+(4-2*t)*t;
      const scrollNow = startPosition + (distance * easing(percentage));
      
      container.scrollTop = scrollNow;

      if (progress < duration) {
        window.requestAnimationFrame(animateScroll);
      }
    };

    window.requestAnimationFrame(animateScroll);
  }
}
