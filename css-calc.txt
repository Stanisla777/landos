/* eslint-disable */
export default function contentNote() {
  const notes = document.querySelectorAll('.js--content-note');

  // === iOS / touch handling (оставляем как есть) ===
  const isIOS = (/(iPad|iPhone|iPod)/.test(navigator.userAgent) && !window.MSStream) ||
                (navigator.userAgent.includes('Mac') && 'ontouchend' in document);

  if (isIOS) {
    document.addEventListener('touchstart', function(e) {
      if (e.target.classList.contains('js--content-note') && e.target.classList.contains('active')) {
        e.target.classList.remove('active');
        var textEl = e.target.querySelector('.content-note__text');
        if (textEl) textEl.classList.remove('active');
      }

      if (!e.target.classList.contains('js--content-note')) {
        for (var i = 0; i < notes.length; i++) {
          notes[i].classList.remove('active');
          var textEl = notes[i].querySelector('.content-note__text');
          if (textEl) textEl.classList.remove('active');
        }
      }

      if (e.target.classList.contains('js--content-note')) {
        for (var i = 0; i < notes.length; i++) {
          notes[i].classList.remove('active');
          var textEl = notes[i].querySelector('.content-note__text');
          if (textEl) textEl.classList.remove('active');
        }

        e.target.classList.add('active');
        var textEl = e.target.querySelector('.content-note__text');
        if (textEl) textEl.classList.add('active');

        // Позиционирование (оставляем вашу логику без изменений)
        var rect = e.target.getBoundingClientRect();
        var parent = e.target.parentElement;
        var tooltip = e.target.querySelector('.content-note__text');
        if (!tooltip) return;

        var parentPos = parent.getBoundingClientRect();
        var relativePosLeftElement = rect.left - parentPos.left;
        var noteText = tooltip;
        var windowWidth = document.body.offsetWidth;
        var windowHeight = window.innerHeight;
        var parentWidth = parent.offsetWidth;
        var leftOffset = rect.left + rect.width / 2;
        var topOffset = rect.top + rect.height / 2;

        // Позиционирование по горизонтали
        if (e.target.closest('.js--courses-accord-content') ||
            e.target.closest('.js--element-overflow') ||
            e.target.closest('.js--element-overflow-x')) {

          if (parentWidth / 2 < relativePosLeftElement) {
            noteText.style.left = 'auto';
            noteText.style.right = '-.25rem';
          } else {
            noteText.style.left = '.25rem';
            noteText.style.right = 'auto';
          }

          if (windowWidth < 600) {
            noteText.style.inset = 'unset';
            noteText.style.transform = 'translateX(' + (-(rect.left - tooltip.offsetWidth / 2 + 7) - (windowWidth / 2 - tooltip.offsetWidth / 2)) + 'px)';
          }
        } else {
          if (windowWidth / 2 < leftOffset) {
            noteText.style.left = 'auto';
            noteText.style.right = '-.25rem';
          } else {
            noteText.style.left = '.25rem';
            noteText.style.right = 'auto';
          }

          if (windowWidth < 600) {
            noteText.style.inset = 'unset';
            noteText.style.transform = 'translateX(' + (-(rect.left - tooltip.offsetWidth / 2 + 7) - (windowWidth / 2 - tooltip.offsetWidth / 2)) + 'px)';
          }
        }

        // Позиционирование по вертикали
        if (e.target.closest('.js--courses-accord-content') || e.target.closest('.js--element-overflow')) {
          var notesParentBounding = e.target.closest('.js--courses-accord-content').getBoundingClientRect();
          var locationDifference = rect.top - notesParentBounding.top;
          var heightTooltip = tooltip.offsetHeight;
          if (heightTooltip >= locationDifference) {
            noteText.style.top = 'calc(100% + .25rem)';
            noteText.style.bottom = 'auto';
          } else if (windowHeight / 2 < topOffset) {
            noteText.style.top = 'auto';
            noteText.style.bottom = 'calc(100% + .25rem)';
          } else {
            noteText.style.top = 'calc(100% + .25rem)';
            noteText.style.bottom = 'auto';
          }
        } else {
          if (windowHeight / 2 > topOffset) {
            noteText.classList.remove('up');
            noteText.classList.add('down');
            noteText.style.top = 'calc(100% + .25rem)';
            noteText.style.bottom = 'auto';
          } else {
            noteText.classList.remove('down');
            noteText.classList.add('up');
            noteText.style.top = 'auto';
            noteText.style.bottom = 'calc(100% + .25rem)';
          }
        }
      }
    });
  }

  // === Desktop: mouseover ===
  document.addEventListener('mouseover', function(e) {
    if (e.target.classList.contains('js--content-note')) {
      e.target.classList.add('active');
      var textEl = e.target.querySelector('.content-note__text');
      if (textEl) textEl.classList.add('active');

      // Позиционирование (аналогично touch, но без проверки ширины <600 отдельно)
      var rect = e.target.getBoundingClientRect();
      var parent = e.target.parentElement;
      var tooltip = e.target.querySelector('.content-note__text');
      if (!tooltip) return;

      var parentPos = parent.getBoundingClientRect();
      var relativePosLeftElement = rect.left - parentPos.left;
      var noteText = tooltip;
      var windowWidth = document.body.offsetWidth;
      var windowHeight = window.innerHeight;
      var parentWidth = parent.offsetWidth;
      var leftOffset = rect.left + rect.width / 2;
      var topOffset = rect.top + rect.height / 2;

      // Горизонталь
      if (e.target.closest('.js--courses-accord-content') ||
          e.target.closest('.js--element-overflow') ||
          e.target.closest('.js--element-overflow-x')) {

        if (parentWidth / 2 < relativePosLeftElement) {
          noteText.style.left = 'auto';
          noteText.style.right = '-.25rem';
        } else {
          noteText.style.left = '.25rem';
          noteText.style.right = 'auto';
        }

        if (windowWidth < 470) {
          noteText.style.left = '0';
          noteText.style.transform = 'translateX(' + (-(leftOffset - 28) + ((windowWidth / 2) - 40) - ((tooltip.offsetWidth / 2) - 15)) + 'px)';
        }
      } else {
        if (windowWidth / 2 < leftOffset) {
          noteText.style.left = 'auto';
          noteText.style.right = '-.25rem';
        } else {
          noteText.style.left = '.25rem';
          noteText.style.right = 'auto';
        }

        if (windowWidth < 470) {
          noteText.style.left = '0';
          noteText.style.transform = 'translateX(' + (-(leftOffset - 28) + ((windowWidth / 2) - 40) - ((tooltip.offsetWidth / 2) - 15)) + 'px)';
        }
      }

      // Вертикаль
      if (e.target.closest('.js--courses-accord-content') || e.target.closest('.js--element-overflow')) {
        var notesParentBounding = e.target.closest('.js--courses-accord-content').getBoundingClientRect();
        var locationDifference = rect.top - notesParentBounding.top;
        var heightTooltip = tooltip.offsetHeight;
        if (heightTooltip >= locationDifference) {
          noteText.style.top = 'calc(100% + .25rem)';
          noteText.style.bottom = 'auto';
        } else if (windowHeight / 2 < topOffset) {
          noteText.style.top = 'auto';
          noteText.style.bottom = 'calc(100% + .25rem)';
        } else {
          noteText.style.top = 'calc(100% + .25rem)';
          noteText.style.bottom = 'auto';
        }
      } else {
        if (windowHeight / 2 > topOffset) {
          noteText.classList.remove('up');
          noteText.classList.add('down');
          noteText.style.top = 'calc(100% + .25rem)';
          noteText.style.bottom = 'auto';
        } else {
          noteText.classList.remove('down');
          noteText.classList.add('up');
          noteText.style.top = 'auto';
          noteText.style.bottom = 'calc(100% + .25rem)';
        }
      }
    }

    // Активируем тултип, если навели на его содержимое
    if (e.target.closest && e.target.closest('.content-note__text')) {
      var root = e.target.closest('.js--content-note');
      if (root) {
        root.classList.add('active');
        var textEl = root.querySelector('.content-note__text');
        if (textEl) textEl.classList.add('active');
      }
    }
  });

  // === Desktop: mouseout (главный обработчик) ===
  document.addEventListener('mouseout', function(e) {
    var from = e.relatedTarget || e.toElement;

    // Проверяем, ушёл ли курсор ВНЕ всего тултипа
    var currentTooltip = e.target.closest && e.target.closest('.js--content-note');
    var fromInsideSameTooltip = from && from.closest && from.closest('.js--content-note');

    if (currentTooltip && (!fromInsideSameTooltip)) {
      currentTooltip.classList.remove('active');
      var textEl = currentTooltip.querySelector('.content-note__text');
      if (textEl) textEl.classList.remove('active');
    }
  });
}
