methods: {
  receivedDateMobile([year, month]) {
    const dateString = `${year}-${month}`;
    this.$nextTick(() => {
      const element = this.$refs.mobileShedule.querySelector(`[data-date="${dateString}"]`);
      if (element) {
        this.smoothScrollToElement(element);
      }
    });
  },
  
  smoothScrollToElement(element) {
    // Проверяем поддержку smooth scroll
    const supportsSmoothScroll = 'scrollBehavior' in document.documentElement.style;
    
    if (supportsSmoothScroll) {
      // Для современных браузеров
      element.scrollIntoView({
        behavior: 'smooth',
        block: 'start'
      });
    } else {
      // Полифил для старых браузеров и iOS
      const container = this.$refs.mobileShedule;
      const targetPosition = element.offsetTop - container.offsetTop;
      const startPosition = container.scrollTop;
      const distance = targetPosition - startPosition;
      const duration = 500; // Длительность анимации в мс
      let startTime = null;
      
      const animation = (currentTime) => {
        if (!startTime) startTime = currentTime;
        const timeElapsed = currentTime - startTime;
        const run = this.easeInOutQuad(timeElapsed, startPosition, distance, duration);
        container.scrollTop = run;
        if (timeElapsed < duration) {
          requestAnimationFrame(animation);
        }
      };
      
      requestAnimationFrame(animation);
    }
  },
  
  easeInOutQuad(t, b, c, d) {
    // Функция плавности анимации
    t /= d/2;
    if (t < 1) return c/2*t*t + b;
    t--;
    return -c/2 * (t*(t-2) - 1) + b;
  }
}
